{"version":3,"sources":["assets/landingpage/logo22.png","components/aboutus/Aboutus.jsx","components/landingpage/Navigation.jsx","assets/landingpage/team.png","assets/landingpage/trust.png","assets/landingpage/team1.png","assets/landingpage/video.mp4","assets/landingpage/illustartion.png","components/landingpage/Demo.jsx","components/disclaimer/Disclaimer.jsx","components/landingpage/Footer.jsx","redux/actions/userInfoAction.js","components/register/SignUpNeeder.jsx","components/register/signUpGiver.jsx","assets/login/signin.png","Logout.js","components/login/Login.jsx","components/login/LogoutPage.jsx","redux/actions/goodsInfoAction.js","components/giver/Goods.jsx","components/giver/Giverprofile.jsx","components/categories/categories.jsx","redux/actions/goodsPerCategoryAction.js","components/needer/NeederProfile.jsx","components/giver/NewItem.jsx","components/giver/utils.js","components/giver/ItemPreview.jsx","components/contactus/contactus.jsx","components/giver/ItemView.jsx","components/giver/EditItem.jsx","components/giver/DetailsItem.jsx","components/needer/ContactGiver.jsx","Authenticate.js","App.jsx","serviceWorker.js","redux/reducers/userInfoReducer.js","redux/reducers/goodsInfoReducer.js","redux/reducers/goodsPerCategoryReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Aboutus","props","Modal","aria-labelledby","size","className","Header","closeButton","Title","id","Body","Container","Row","Col","lg","Footer","Navigation","useState","modalShow","setModalShow","signIn","useSelector","state","userInfo","signedIn","Navbar","collapseOnSelect","expand","sticky","Brand","href","src","logo","width","height","alt","Toggle","aria-controls","Collapse","Nav","Item","Link","onClick","show","onHide","Demo","Jumbotron","to","Button","CardDeck","Card","Text","Img","style","team","trust","team1","controls","url","video","footer","Disclaimer","history","useHistory","push","paddingRight","aria-hidden","signedUserInfo","user","type","payload","SignUpNeeder","validated","setValidated","first_name","setFirst_name","last_name","setLast_name","age","setAge","phone","setPhone","street","setStreet","email","setEmail","description","setDescription","password","setPassword","confirmpassword","setConfirmpassword","errorMessage","setErrorMessage","dispatch","useDispatch","usertype","is_needer","handleSubmit","event","a","form","currentTarget","preventDefault","stopPropagation","checkValidity","userdata","is_giver","agreement","axios","post","then","res","console","log","error","pathname","Form","noValidate","onSubmit","Group","as","md","controlId","Label","Control","required","name","minLength","maxLength","onChange","e","target","value","Feedback","min","max","placeholder","rows","Check","label","feedback","SignUpGiver","data","Logout","useEffect","withCredentials","response","Login","authenticated","setAuthenticated","isGiver","isNeeder","pic","LogoutPage","createGoods","goods","Goods","setGoods","user_id","FetchGoods","get","deleteGood","index","filterGoods","Object","entries","filter","key","newGoods","fromEntries","delete","display","flexWrap","justifyContent","values","map","good","flexGrow","image","moment","utc","createdAt","local","startOf","fromNow","item_name","category","goods_id","variant","Giver","Categories","isOpen","setOpen","categories","setCategories","FetchCategories","resCategories","fetchGoods","categoryId","goodUrl","resGoods","toggleBtn","document","getElementById","left","marginLeft","classList","add","remove","openNav","closeNav","category_name","categories_id","category_image","Needer","goodsPerCategory","categoryGoods","NewItem","item","setItem","setCategory","quality","setQuality","quantity","setQuantity","setImage","setForm","formData","FormData","append","uploadImg","File","files","aria-describedby","htmlFor","custom","data-id","getCategoryId","category_id","ItemPreview","giver_id","location","newItem","available","taken","owner_id","handleNewItem","Contactus","setMessage","useForm","succeeded","prefix","field","errors","disabled","submitting","ItemView","itemIndex","useParams","goods_copy","cloneDeep","currentGood","currentGoodId","deleteItem","EditItem","fetchGood","updatedGood","put","DetailsItem","SetGood","fetchItem","ListGroup","ListGroupItem","ContactGiver","setGood","giver","setGiver","subject","setSubject","message","SetMessage","fetchGiver","mailInfo","from","content","Authenticate","App","path","exact","component","Boolean","window","hostname","match","initialState","signedOut","signedInError","allReducers","combineReducers","action","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b9625f70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo22.484dbe2e.png\";","import React from \"react\";\nimport {Modal, Container, Row, Col} from \"react-bootstrap\";\nimport '../../App.css';\n\nfunction Aboutus(props) {\n    return (\n        <Modal\n            {...props}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            size=\"xl\"\n            className=\"bg\">\n            <Modal.Header closeButton>\n                <Modal.Title\n                    id=\"contained-modal-title-vcenter\"\n                    className=\"p-2 modal-title text-white w-100 text-center\">\n                    About us\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"show-grid\">\n                <Container>\n                    {/* every kindness */}\n                    <Row>\n                        <Col lg=\"4\"></Col>\n                        <Col >\n                            <div className=\"aboutus-card p-5 m-4\" id=\"kindness\">\n                                <h4 className=\"text-center text-white aboutus-title\">Every Kindness Count</h4>\n                                <div className=\"aboutus-text mt-4\">\n                                    Just4giving is more than just a list of goods. It’s a place of one’s dare to\n                                    care, to transform the lives of unprivileged people in the society.\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                    {/* vision */}\n                    <Row>\n                        <Col>\n                            <div className=\"aboutus-card p-5 m-4\" id=\"vision\">\n                                <h4 className=\"text-center text-white aboutus-title\">Vision</h4>\n                                <div className=\"aboutus-text mt-4\">\n                                    \n                                    <div className=\"mb-5\">\n                                    JUST4Giving is not a sharing application but a donation application.\n                                    This is why we ask our givers to explain their stories,\n                                    we want to be sure that they are persons in need.\n                                    </div>\n                                    <div>\n                                    Every human being have rights and deserve to have a good life.\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                        </Col>\n                        <Col lg=\"4\">\n                            <div className=\"img-container d-flex justify-content-center align-items-end\">\n                                {/* <div id=\"img-humaans-space\"></div> */}\n                            </div>\n                        </Col>\n                    </Row>\n                    {/* mission */}\n                    <Row>\n                        <Col lg=\"4\">\n                            <div className=\"img-container d-flex justify-content-center align-items-end\">\n                                <div id=\"img-humaans-3-caharacters\"></div>\n                            </div>\n                        </Col>\n                        <Col>\n                            <div className=\"aboutus-card p-5 m-4\" id=\"mission\">\n                                <h4 className=\"text-center text-white aboutus-title\">Mission</h4>\n                                <div className=\"aboutus-text mt-4\">\n                                    Just4giving is a platform that welcomes underprivileged individuals or new\n                                    comers with the aim of offering them a way to support them in positively\n                                    material growing. Just4giving is also a place for good people who wants to share\n                                    they stuff with others. While doing so, providing them a place to connected is\n                                    our pleasure.\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>\n                {/* <Button onClick={props.onHide}>Close</Button> */}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default Aboutus;","import React, {useState} from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport logo from \"../../assets/landingpage/logo22.png\";\nimport {useSelector} from \"react-redux\";\n//import Disclaimer from \"../disclaimer/Disclaimer\";\nimport Aboutus from \"../aboutus/Aboutus\";\n\nfunction Navigation() {\n    //modal disclaimer\n    const [modalShow, setModalShow] = useState(false);\n    // check if the user is sign in\n    const signIn = useSelector(state => state.userInfo.signedIn) ;\n\n    const authenticatedNavBar = () => {\n        return (\n\n            <div>\n                <Navbar collapseOnSelect expand=\"lg\" sticky=\"top\">\n                    <Navbar>\n                        <Navbar.Brand className=\"main-brand\" href=\"/\">\n                            <img\n                                src={logo}\n                                width=\"60\"\n                                height=\"60\"\n                                className=\"d-inline-block align-top\"\n                                alt=\"just4giving logo\"\n                            />\n                            JUST4GIVING\n                        </Navbar.Brand>\n                    </Navbar>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"row justify-content-end links\">\n                        <Nav.Item>\n                          <Nav.Link onClick={() => setModalShow(true)}>\n                            About Us\n                          </Nav.Link>\n                          <Aboutus show={modalShow} onHide={() => setModalShow(false)} />\n                        </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link href=\"/logout\">Sign Out</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )};\n    const unauthenticatedNavBar = () => {\n        return (\n            <div className=\"margin-t-b\">\n                <Navbar collapseOnSelect expand=\"lg\" sticky=\"top\">\n                    <Navbar>\n                        <Navbar.Brand className=\"main-brand\" href=\"/\">\n                            <img\n                                src={logo}\n                                width=\"60\"\n                                height=\"60\"\n                                className=\"d-inline-block align-top\"\n                                alt=\"just4giving logo\"\n                            />\n                            JUST4GIVING\n                        </Navbar.Brand>\n                    </Navbar>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"row justify-content-end links\">\n                            <Nav.Item>\n                                <Nav.Link onClick={() => setModalShow(true)}>\n                                  About Us\n                                </Nav.Link>\n                                <Aboutus show={modalShow} onHide={() => setModalShow(false)} />\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link href=\"/login\">Sign In</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )};\n\n    return (\n        <div  >\n             {/*<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />*/}\n            <>\n            { signIn ?   authenticatedNavBar() : unauthenticatedNavBar()}\n            </>\n        </div>\n    )\n}\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/team.ff6f61b6.png\";","export default __webpack_public_path__ + \"static/media/trust.64576dfa.png\";","export default __webpack_public_path__ + \"static/media/team1.04ca9913.png\";","export default __webpack_public_path__ + \"static/media/video.1daf1a7b.mp4\";","export default __webpack_public_path__ + \"static/media/illustartion.6c2bd8dc.png\";","import React from \"react\";\nimport { Jumbotron, Button, Card, CardDeck } from \"react-bootstrap\";\nimport team from \"../../assets/landingpage/team.png\";\nimport trust from \"../../assets/landingpage/trust.png\";\nimport team1 from \"../../assets/landingpage/team1.png\";\nimport ReactPlayer from \"react-player\";\nimport video from \"../../assets/landingpage/video.mp4\";\nimport footer from \"../../assets/landingpage/illustartion.png\";\nimport { Link } from \"react-router-dom\";\nfunction Demo() {\n  return (\n    <div className=\"Demo\">\n      <div className=\"bg\">\n        <Jumbotron>\n          <h1>Welcome To JUST4GIVING!</h1>\n          <p>\n          <Link to={\"/signupneeder\"}>\n            <Button className=\"btn-sm\">I Need Something</Button>\n          </Link>\n          <Link to={\"/signupgiver\"}>\n            <Button className=\"btn-sm\">I Want to donate Something</Button>\n          </Link>\n          </p>\n        </Jumbotron>\n\n        <CardDeck className=\"cards\">\n          <Card className=\"shadow-lg card-rounded card-width card1 mt-4\">\n            <Card.Body>\n              <Card.Title id=\"card1h\">Donate</Card.Title>\n              <Card.Text id=\"card1p\">\n                Don't throw it away, give it away. Help others to have a better\n                life.\n              </Card.Text>\n              <Card.Img\n                style={{ width: \"120px\", height: \"120px\" }}\n                src={team}\n              />\n            </Card.Body>\n          </Card>\n          <Card className=\"shadow-lg card-width card-rounded card2 mt-4\">\n            <Card.Body>\n              <Card.Title id=\"card2h\">Help</Card.Title>\n              <Card.Text id=\"card2p\">\n                We know you are strong but accepting help is its own kind of\n                strength.\n              </Card.Text>\n              <Card.Img\n                style={{ width: \"120px\", height: \"120px\" }}\n                src={trust}\n              />\n            </Card.Body>\n          </Card>\n          <Card className=\"shadow-lg card-width card-rounded card3 mt-4\">\n            <Card.Body>\n              <Card.Title id=\"card3h\">Connected</Card.Title>\n              <Card.Text id=\"card3p\">\n                Stay connected. The world is full with nice people. If you can't\n                find one Be One!\n              </Card.Text>\n              <Card.Img\n                style={{ width: \"120px\", height: \"120px\" }}\n                src={team1}\n              />\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <div className=\"container\">\n          <div className=\"player-wrapper\">\n            <h2 id=\"videoh\">Our Vision</h2>\n            <ReactPlayer\n              className=\"react-player\"\n              width='100%'\n          height='100%'\n              // height=\"650px\"\n              controls={true}\n              url={video}\n            />\n          </div>\n        </div>\n\n        <div>\n          <img className=\"bg2\" src={footer} alt=\"bg2\" />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Demo;\n","import React from 'react';\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\nimport '../../App.css';\nfunction Disclaimer(props) {\n    return (\n        <Modal\n            {...props}\n            aria-labelledby='contained-modal-title-vcenter'\n            size='xl'\n            className='bg'>\n            <Modal.Header closeButton>\n                <Modal.Title\n                    id='contained-modal-title-vcenter'\n                    className='p-2 modal-title text-white w-100 text-center'>\n                    Privacy Policy | Disclaimer\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className='show-grid'>\n                <Container>\n                    {/* terms of use */}\n                    <Row>\n                        <Col lg='4'></Col>\n                        <Col>\n                            <div className='disclaimer-card p-5 m-4' id='terms'>\n                                <h4 className='text-center text-white disclaimer-title'>\n                                    Terms of Use\n                                </h4>\n                                <div className='disclaimer-text mt-4'>\n                                    Terms of use: By using the app, you consent\n                                    to the terms of use, if you do not consent;\n                                    do not use App site. The services provided\n                                    through our JUST4GIVING App require you to\n                                    open an account (sign up). You are\n                                    responsible (liable) for maintaining the\n                                    confidentiality of the information you hold\n                                    for your account, including your password\n                                    and activity that occurs under your account;\n                                    so keep your information confidential. You\n                                    may be held liable for misuse or abuse for\n                                    any other user of our App due to someone\n                                    else using your email, password or account\n                                    as a result of your fault to keep your\n                                    account information confidential. Any\n                                    feedback (comment) you provided on our site\n                                    shall be regarded as non-confidential, will\n                                    be free to use such information\n                                    uninhibitedly.\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                    {/* privacy */}\n                    <Row>\n                        <Col>\n                            <div\n                                className='disclaimer-card p-5 m-4'\n                                id='privacy'>\n                                <h4 className='text-center text-white disclaimer-title'>\n                                    Privacy\n                                </h4>\n                                <div className='disclaimer-text mt-4'>\n                                    <ul>\n                                        <li className=\"mb-3\">\n                                            We won’t pass on your phone number\n                                            to any organisation outside\n                                            JUST4GIVING.\n                                        </li>\n                                        <li className=\"mb-3\">\n                                            As a giver you can get notification\n                                            in your email from the needer who\n                                            interest in your item.\n                                        </li>\n                                        <li className=\"mb-3\">\n                                            As a needer you can see the email of\n                                            the giver and contact them via\n                                            email.\n                                        </li>\n                                        <li>\n                                            If you put phone numbers, postal\n                                            addresses into your posts on\n                                            JUST4GIVING, other people will be\n                                            able to see them. If you're\n                                            concerned about this, don't do it!\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col lg='4'>\n                            <div className='img-container d-flex justify-content-center align-items-end'>\n                                <div id='img-humaans-space'></div>\n                            </div>\n                        </Col>\n                    </Row>\n                    {/* disclaimer */}\n                    <Row>\n                        <Col lg='4'></Col>\n                        <Col>\n                            <div\n                                className='disclaimer-card p-5 m-4'\n                                id='disclaimer'>\n                                <h4 className='text-center text-white disclaimer-title'>\n                                    Disclaimer\n                                </h4>\n                                <div className='disclaimer-text mt-4'>\n                                    <ul>\n                                        <li className=\"mb-3\">\n                                            JUST4GIVING puts people who wants to\n                                            give items in touch with people who\n                                            want those items. Because of how it\n                                            works, JUST4GIVING never sees or\n                                            checks items and they may not be in\n                                            working order. Any agreement you\n                                            reach about any items will be\n                                            between the person requesting items\n                                            and you.\n                                        </li>\n                                        <li className=\"mb-3\">\n                                            Please use common sense when posting\n                                            to JUST4GIVING or collecting an\n                                            item. Example for the safety, most\n                                            collections occur at home, but if\n                                            you're worried about that, arrange\n                                            to meet in a cafe or other public\n                                            place.\n                                        </li>\n                                        <li className=\"mb-3\">\n                                            JUST4GIVING is a free stuff app, so\n                                            you should never hand over money.\n                                        </li>\n                                        <li>\n                                            If you are unlucky enough to be\n                                            scammed, please report it to the\n                                            Police and to us.\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>\n                {/* <Button onClick={props.onHide}>Close</Button> */}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default Disclaimer;\n","import React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n//import { Redirect } from \"react-router\";\nimport Disclaimer from \"../disclaimer/Disclaimer\";\nimport {useHistory} from \"react-router-dom\";\n \n\n\nfunction Footer() {\n  //modal disclaimer\n  const [modalShow, setModalShow] = useState(false);\n  const history = useHistory()\n  return (\n    <footer className=\"main-footer mt-auto\">\n      <Navbar\n        className=\"d-flex justify-content-between\"\n        sticky=\"Bottom\"\n        collapseOnSelect\n        expand=\"lg\"\n      >\n        <Nav>\n          <Nav.Item>\n            <Nav.Link className=\"footer-priv\" onClick={() => setModalShow(true)}>\n              | Privacy Policy | Disclaimer |\n            </Nav.Link>\n            <Disclaimer show={modalShow} onHide={() => setModalShow(false)} />\n          </Nav.Item>\n        </Nav>\n\n        <Nav>Copyright © 2021 Hack Your Future | All Rights Reserved |</Nav>\n\n        <Nav>\n          <Nav.Item className=\"footer-item\">\n            <i \n            onClick={()=> history.push('/contactus') } \n              className=\"fa fa-envelope-square fa-2x mail\"\n              style={{ paddingRight: \"20px\" }}\n            ></i>\n            <a href=\"https://github.com/hyf-Group2-fp/Just4Giving\">\n              <i className=\"fa fa-github fa-2x github\" aria-hidden=\"true\"></i>\n            </a>\n          </Nav.Item>\n        </Nav>\n      </Navbar>\n    </footer>\n  );\n}\nexport default Footer;\n","\n/**\n * User Action :\n * ------------\n *\n *\n */\n\nexport const userGiver = (user) => {\n    return{\n        type:'IS_GIVER',\n        payload:user\n    }\n};\n\n\nexport const userNeeder = (user) => {\n    return{\n        type:'IS_NEEDER',\n        payload:user ,\n    }\n};\n\nexport const signedUserInfo =(user) => {\n    return {\n        type:'SIGNED_USER_INFO',\n        payload: user,\n    }\n}\n\n\nexport const signedUserError = () => {\n    return{\n        type:'SIGNED_IN_ERROR',\n    }\n}\n\n\nexport const signedUserOut = () => {\n    return{\n        type:'SIGNED_OUT',\n    }\n}","import React, { useState } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport Disclaimer from '../disclaimer/Disclaimer';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userNeeder } from '../../redux/actions/userInfoAction.js';\n\nfunction SignUpNeeder() {\n    const [validated, setValidated] = useState(false);\n    const [first_name, setFirst_name] = useState('');\n    const [last_name, setLast_name] = useState('');\n    const [age, setAge] = useState('');\n    const [phone, setPhone] = useState('');\n    const [street, setStreet] = useState('');\n    const [email, setEmail] = useState('');\n    const [description, setDescription] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmpassword, setConfirmpassword] = useState('');\n    const [modalShow, setModalShow] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const dispatch = useDispatch();\n\n    // get the needer\n    const usertype = useSelector((state) => state.userInfo.is_needer);\n    const url = '/api/needer/signup';\n\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else if (password !== confirmpassword) {\n            setErrorMessage(\n                'Password and Confirm password are not same, try again'\n            );\n            // alert(\"password and confirmpassword does not match\");\n            event.stopPropagation();\n        } else {\n            const userdata = {\n                first_name: first_name,\n                last_name: last_name,\n                age: age,\n                phone: phone,\n                street: street,\n                description: description,\n                email: email,\n                password: password,\n                is_giver: 0,\n                is_needer: 1,\n                agreement: 1,\n            };\n\n            try {\n                const response = await axios.post(url, userdata).then((res) => {\n                    console.log(res);\n                    // dispatch action\n                    dispatch(userNeeder(userdata));\n                });\n            } catch (error) {\n                // should be error.response.data.message\n                setErrorMessage('Email already exist, Please try Sign In');\n                // alert('email already exist, please try login');\n                console.error('There was an error!', error);\n            }\n        }\n\n        event.preventDefault();\n        setValidated(true);\n    };\n    if (usertype === 1) return <Redirect to={{ pathname: '/profileneeder' }} />;\n\n    return (\n        <div className=\"forms\">\n            <h1 className=\"text-center formh1\"> Who are you?</h1>\n            <div className=\"container formview\">\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"first_name\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"first_name\"\n                                type=\"text\"\n                                minLength=\"3\"\n                                maxLength=\"50\"\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                At least 3 letters\n                            </Form.Control.Feedback>{' '}\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"last_name\">\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"last_name\"\n                                type=\"text\"\n                                minLength=\"3\"\n                                maxLength=\"50\"\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>{' '}\n                            <Form.Control.Feedback type=\"invalid\">\n                                At least 3 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"2\" controlId=\"age\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                min={18}\n                                max={120}\n                                name=\"age\"\n                                onChange={(e) => setAge(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter age between 18-120\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"4\" controlId=\"phone\">\n                            <Form.Label>Phone</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                placeholder=\"+32\"\n                                value={validated.phone}\n                                name=\"phone\"\n                                minLength=\"5\"\n                                maxLength=\"255\"\n                                onChange={(e) => setPhone(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your phone number with anyone\n                                else.\n                            </Form.Text>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter phone number.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                required\n                                name=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter email address.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"address\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                required\n                                minLength=\"5\"\n                                maxLength=\"255\"\n                                name=\"address\"\n                                onChange={(e) => setStreet(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter your street name at least 5 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"description\">\n                            <Form.Label>\n                                Tell us your story in 200 words\n                            </Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                required\n                                placeholder=\"Example: I am Sabrina, I came from Palestine. I just move to Belgium last month with my husband and my little daughter. I live in Brussel, I stay in a studio with very limited furniture. I know this app from a friend, I hope I could find some stuff that could be useful for me.\"\n                                minLength=\"200\"\n                                maxLength=\"500\"\n                                rows={5}\n                                name=\"description\"\n                                onChange={(e) => setDescription(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Explain your situation in at least 200 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"255\"\n                                required\n                                name=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Password must be 8 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group\n                            as={Col}\n                            md=\"12\"\n                            controlId=\"confirmpassword\"\n                            onChange={(e) => setConfirmpassword(e.target.value)}\n                        >\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"255\"\n                                required\n                            />{' '}\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Group>\n                        {/* \n                    <a href=\"\" onClick={()=>setModalShow(true)}>*/}\n                        <Form.Check\n                            required\n                            label=\"Agree to the terms and conditions \"\n                            feedback=\"You must agree before submitting.\"\n                        />\n\n                        {/*</a>*/}\n\n                        <Disclaimer\n                            show={modalShow}\n                            onHide={() => setModalShow(false)}\n                        />\n                    </Form.Group>\n                    {errorMessage && (\n                        <div className=\"error\"> {errorMessage} </div>\n                    )}\n\n                    {/* class=\"btn-submit float-right btn btn-primary */}\n                    {/* <Button type=\"submit\" className=\"formb\"> */}\n                    <Button type=\"submit\" className=\"btn-submit float-right\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\nexport default SignUpNeeder;\n","import React, { useState } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n//import Disclaimer from \"../disclaimer/Disclaimer\";\n\n//Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userGiver } from '../../redux/actions/userInfoAction.js';\n\nfunction SignUpGiver(props) {\n    const url = '/api/giver/signup';\n    const [validated, setValidated] = useState(false);\n    const [first_name, setFirst_name] = useState('');\n    const [last_name, setLast_name] = useState('');\n    const [age, setAge] = useState('');\n    const [phone, setPhone] = useState('');\n    const [street, setStreet] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmpassword, setConfirmpassword] = useState('');\n    //const [modalShow, setModalShow] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const dispatch = useDispatch();\n\n    // get the giver\n    const usertype = useSelector((state) => state.userInfo.is_giver);\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else if (password !== confirmpassword) {\n            setErrorMessage(\n                'Password and Confirm password are not same, try again.'\n            );\n            // alert(\"password and confirmpassword does not match\");\n            event.stopPropagation();\n        } else {\n            const userdata = {\n                first_name: first_name,\n                last_name: last_name,\n                age: age,\n                phone: phone,\n                street: street,\n                description: 'no description',\n                email: email,\n                password: password,\n                is_giver: 1,\n                is_needer: 0,\n                agreement: 1,\n            };\n\n            try {\n                const response = await axios.post(url, userdata).then((res) => {\n                    console.log(res.data);\n\n                    // dispatch action\n                    dispatch(userGiver(userdata));\n                });\n            } catch (error) {\n                setErrorMessage('Email already exist, Please try Sign In.');\n                // alert('email already exist, please try login');\n                console.error('There was an error!', error);\n            }\n        }\n        event.preventDefault();\n        setValidated(true);\n    };\n    if (usertype === 1) return <Redirect to={{ pathname: '/profilegiver' }} />;\n    return (\n        <div className=\"forms\">\n            <h1 className=\"text-center formh1\"> Who are you?</h1>\n            <div className=\"container formview\">\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"first_name\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"first_name\"\n                                type=\"text\"\n                                minLength=\"3\"\n                                maxLength=\"20\"\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                At least 3 letters\n                            </Form.Control.Feedback>{' '}\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"last_name\">\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"last_name\"\n                                type=\"text\"\n                                minLength=\"3\"\n                                maxLength=\"20\"\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>{' '}\n                            <Form.Control.Feedback type=\"invalid\">\n                                At least 3 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"2\" controlId=\"age\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                min={18}\n                                max={100}\n                                name=\"age\"\n                                onChange={(e) => setAge(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter age between 18-100\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"4\" controlId=\"phone\">\n                            <Form.Label>Phone</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                placeholder=\"+32\"\n                                value={validated.phone}\n                                name=\"phone\"\n                                onChange={(e) => setPhone(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your phone number with anyone\n                                else.\n                            </Form.Text>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter phone number.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                required\n                                name=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter email address.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"address\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                required\n                                minLength=\"5\"\n                                name=\"address\"\n                                onChange={(e) => setStreet(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter your street name in at least 5 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"20\"\n                                required\n                                name=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Password must be 8 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group\n                            as={Col}\n                            md=\"12\"\n                            controlId=\"confirmpassword\"\n                            onChange={(e) => setConfirmpassword(e.target.value)}\n                        >\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"20\"\n                                required\n                            />{' '}\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Group>\n                        {/* <a href=\"\" onClick={()=>setModalShow(true)}> */}\n                        <Form.Check\n                            required\n                            label=\"Agree to the terms and conditions \"\n                            feedback=\"You must agree before submitting.\"\n                        />\n                        {/* </a> */}\n                        {/* <Disclaimer show={modalShow} onHide={() => setModalShow(false)} /> */}\n                    </Form.Group>\n                    {errorMessage && (\n                        <div className=\"error\"> {errorMessage} </div>\n                    )}\n                    {/* btn-submit float-right \n                    <Button type=\"submit\" className=\"formb\"> */}\n                    <Button type=\"submit\" className=\"btn-submit float-right\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\nexport default SignUpGiver;\n","export default __webpack_public_path__ + \"static/media/signin.e34e01af.png\";","import { signedUserOut } from './redux/actions/userInfoAction';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nfunction Logout() {\n    const dispatch = useDispatch();\n    const userInfo = useSelector((state) => state.userInfo);\n\n    useEffect(() => {\n        if (!userInfo || !userInfo?.signedIn) {\n            return;\n        }\n\n        axios\n            .post(\n                '/api/logout',\n                {},\n                {\n                    withCredentials: true,\n                }\n            )\n            .then((response) => {\n                dispatch(signedUserOut(response));\n            });\n    }, [userInfo?.signedIn]);\n\n    return null;\n}\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport { Form, Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport pic from '../../assets/login/signin.png';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    signedUserInfo,\n    signedUserError,\n} from '../../redux/actions/userInfoAction';\nimport Logout from '../../Logout';\nfunction Login() {\n    const [validated, setValidated] = useState(false);\n    const [authenticated, setAuthenticated] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    const [errorMessage, setErrorMessage] = useState('');\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const userdata = {\n                email: email,\n                password: password,\n            };\n            try {\n                axios\n                    .post('/api/authenticate', userdata, {\n                        withCredentials: true,\n                    })\n                    .then((res) => {\n                        // dispatch action\n                        const user = res.data.user;\n                        dispatch(signedUserInfo(user));\n                        setAuthenticated(true);\n                    });\n            } catch (error) {\n                setErrorMessage('Email does not exist, Please try Sign Up');\n                // alert(\"please check your credentials\")\n                dispatch(signedUserError());\n                console.error('There was an error!', error);\n            }\n        }\n        event.preventDefault();\n        setValidated(true);\n    };\n    //choose what to do pass props with the data of the user\n    const isGiver = useSelector((state) => state.userInfo.is_giver);\n    const isNeeder = useSelector((state) => state.userInfo.is_needer);\n    if (authenticated) {\n        if (isGiver) {\n            return <Redirect to={{ pathname: '/profilegiver' }} />;\n        } else if (isNeeder) {\n            return <Redirect to={{ pathname: '/profileneeder' }} />;\n        }\n    }\n    return (\n        <div className=\"forms\">\n            <h1 className=\"text-center formh1\">Sign-in</h1>\n            <Container>\n                <Row>\n                    <Col lg=\"4\"></Col>\n                    <Col>\n                        <Card className=\"signincard\">\n                            <Form\n                                className=\"signin\"\n                                // method=\"post\"\n                                noValidate\n                                validated={validated}\n                                onSubmit={handleSubmit}\n                            >\n                                <Form.Row className=\"form-row-custom\">\n                                    <Form.Group\n                                        className=\"inputs\"\n                                        controlId=\"email\"\n                                    >\n                                        <Form.Label>E-mail</Form.Label>\n                                        <Form.Control\n                                            required\n                                            type=\"email\"\n                                            onChange={(e) =>\n                                                setEmail(e.target.value)\n                                            }\n                                        />\n                                        <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Enter email\n                                        </Form.Control.Feedback>{' '}\n                                    </Form.Group>\n                                </Form.Row>\n                                <Form.Row className=\"form-row-custom\">\n                                    <Form.Group\n                                        className=\"inputs\"\n                                        controlId=\"password\"\n                                    >\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            minLength=\"8\"\n                                            maxLength=\"20\"\n                                            required\n                                            name=\"password\"\n                                            onChange={(e) =>\n                                                setPassword(e.target.value)\n                                            }\n                                        />{' '}\n                                        <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Password must be 8 letters\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                </Form.Row>\n                                {errorMessage && (\n                                    <div className=\"error\">\n                                        {' '}\n                                        {errorMessage}{' '}\n                                    </div>\n                                )}\n                                <Button type=\"submit\" id=\"formblogin\">\n                                    Sign-in\n                                </Button>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <img className=\"bg3\" src={pic} alt=\"helping hands\" />\n                    </Col>\n                    <Col lg=\"4\"></Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\nexport default Login;\n","import React from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport pic from '../../assets/login/signin.png';\nimport Logout from \"../../Logout\";\n\nfunction LogoutPage() {\n\n    return (\n      <div className=\"forms\">\n        <Logout/>\n        <h1 className=\"text-center formh1\">You are logged out</h1>\n        <Container>\n          <Row>\n            <Col>\n              <img className=\"bg3\" src={pic} alt=\"helping hands\"/>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n}\nexport default LogoutPage;","\n// Goods actions\n\n\n// create goods\n\nexport const createGoods =(goods) => {\n    return{\n        type:'CREATE_GOODS' ,\n        payload:goods\n    }\n};\n\n\n// update goods\n\nexport const updateGoods =(goods) => {\n    return{\n        type:'UPDATE_GOODS' ,\n        payload:goods\n    }\n}\n\n// delete goods\n\nexport const deleteGoods =(goods) => {\n    return{\n        type:'DELETE_GOODS' ,\n        payload:goods\n    }\n}","import axios from 'axios';\nimport { Button, Card } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n//import team from '../../assets/landingpage/team.png';\n// component\n// import ItemView from \"./ItemView\";\n\n// Redux\n//import { createGoods, updateGoods } from '../../redux/actions/goodsInfoAction';\nimport { createGoods } from '../../redux/actions/goodsInfoAction';\n\nexport default function Goods() {\n    const [goods, setGoods] = useState({});\n    const history = useHistory();\n\n    // dispatch an action\n    const dispatch = useDispatch();\n\n    // access the state\n    const user_id = useSelector((state) => state.userInfo.user_id);\n    console.log(user_id);\n    const url = `/api/user/goods/${user_id}`;\n\n    // fetch goods\n    const FetchGoods = async () => {\n        const response = await axios.get(url);\n        const goods = response.data.goods;\n        console.log(goods);\n\n        // fire an action\n        dispatch(createGoods(goods));\n        setGoods(goods);\n    };\n\n    useEffect(() => {\n        FetchGoods();\n    }, [user_id]);\n\n    // details good\n    const detailGood = (id) => {\n        console.log(id);\n        history.push(`/detailsitem/${id}`);\n    };\n\n    // edit good\n\n    const editGood = (id) => {\n        console.log(id);\n        history.push(`/edititem/${id}`);\n    };\n\n    // delete good\n\n    const deleteGood = async (id, index) => {\n        const filterGoods = Object.entries(goods).filter(\n            (key, value) => key !== index\n        );\n        const newGoods = Object.fromEntries(filterGoods);\n        setGoods(newGoods);\n        // send a delete request\n\n        const response = await axios.delete(`/api/goods/${id}`);\n        console.log(response);\n        // refresh the page\n        history.push('/itemdelete');\n        history.push('/profilegiver');\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-evenly',\n            }}\n        >\n            {Object.values(goods).map((good, index) => (\n                <Card\n                    className=\"itemCards\"\n                    style={{ flexGrow: 1, width: '18rem' }}\n                    key={good.goods_id}\n                >\n                    <Card.Img\n                        src={'assets/images/uploads/' + good.image}\n                        className=\"img-center text-center mt-4\"\n                        alt=\"good\"\n                        style={{ width: '18rem' }}\n                    />\n                    {/* <Card.Img src={team} alt=\"good\" style={{ width: '18rem' }} /> */}\n                    <Card.Body className=\"text-center\">\n                        <Card.Text>\n                            {' '}\n                            {moment\n                                .utc(good.createdAt)\n                                .local(false)\n                                .startOf('seconds')\n                                .fromNow()}{' '}\n                        </Card.Text>\n\n                        <Card.Title>{good.item_name}</Card.Title>\n\n                        <Card.Text>{good.category}</Card.Text>\n                        <div className=\"btn-good-group\">\n                            <Button\n                                className=\"btn-good\"\n                                size={'sm'}\n                                onClick={() => detailGood(good.goods_id)}\n                                variant=\"secondary\"\n                            >\n                                Details\n                            </Button>\n                            <Button\n                                className=\"btn-good\"\n                                size={'sm'}\n                                onClick={() => editGood(good.goods_id)}\n                                variant=\"info\"\n                            >\n                                Edit\n                            </Button>\n                            <Button\n                                className=\"btn-good\"\n                                size={'sm'}\n                                onClick={() => deleteGood(good.goods_id, index)}\n                                variant=\"danger\"\n                            >\n                                Delete\n                            </Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n            ))}\n        </div>\n    );\n}\n","import { useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// component\nimport Goods from './Goods';\n\nfunction Giver() {\n  // dispatch an action\n  const first_name = useSelector((state) => state.userInfo.first_name);\n\n  return (\n    <div>\n      <div className=\"user-space\">\n        <div className=\"banner\">\n          <div className=\"avatar\"></div>\n          <div className=\"welcome\">\n            <h1> Hello {first_name} !</h1>\n            <p>Welcome to JUST4GIVING </p>\n            <Link to={'/newgoods'}>\n              <Button>I Want To Donate</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <Goods />\n    </div>\n);\n}\n\nexport default Giver;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\n\n// Redux\nimport { createGoodsPerCategory } from '../../redux/actions/goodsPerCategoryAction';\n\nfunction Categories() {\n    const [isOpen, setOpen] = useState(false);\n    const [categories, setCategories] = useState(null);\n\n    // dispatch actions\n\n    const dispatch = useDispatch();\n\n    //fetch the categories\n    const FetchCategories = async () => {\n        const url = `/api/categories`;\n        const response = await axios.get(url);\n        const resCategories = response.data;\n        setCategories(resCategories);\n    };\n\n    const fetchGoods = async (categoryId) => {\n        const goodUrl = `/api/goods/category/${categoryId}`;\n        const response = await axios.get(goodUrl);\n        const resGoods = response.data.goods;\n        console.log(resGoods);\n\n        dispatch(createGoodsPerCategory(resGoods));\n\n        return resGoods;\n    };\n\n    useEffect(() => {\n        const toggleBtn = document.getElementById('open-close-btn');\n        document.getElementById('categories-panel').style.left = '-256px';\n        document.getElementById('main').style.marginLeft = '0';\n        toggleBtn.classList.add('openbtn');\n        toggleBtn.classList.remove('closebtn');\n\n        FetchCategories();\n    }, []);\n\n    const handleToggle = () => {\n        setOpen(!isOpen);\n        if (isOpen) {\n            return closeNav();\n        } else {\n            return openNav();\n        }\n    };\n\n    const openNav = () => {\n        //document.getElementById(\"categories-panel\").style.width = \"300px\";\n        const toggleBtn = document.getElementById('open-close-btn');\n\n        document.getElementById('categories-panel').style.left = '0px';\n        document.getElementById('main').style.marginLeft = '262px';\n        //document.getElementById('main').style.marginLeft = '250px';\n        toggleBtn.classList.add('closebtn');\n        toggleBtn.classList.remove('openbtn');\n    };\n\n    const closeNav = () => {\n        const toggleBtn = document.getElementById('open-close-btn');\n        document.getElementById('categories-panel').style.left = '-256px';\n        document.getElementById('main').style.marginLeft = '0';\n        toggleBtn.classList.add('openbtn');\n        toggleBtn.classList.remove('closebtn');\n    };\n\n    return (\n        <div>\n            <div id=\"categories-panel\" className=\"sidebar\">\n                <div id=\"categories-header\">\n                    <h2 id=\"categories-title-text\">Select a category</h2>\n                </div>\n                <div\n                    id=\"open-close-btn\"\n                    className=\"openbtn\"\n                    onClick={() => handleToggle()}\n                ></div>\n                <div id=\"categories-body\" className=\"row-categories\">\n                    {/* categories */}\n                    {categories &&\n                        categories.map((category) => (\n                            <div\n                                className=\"category col-6\"\n                                key={category.categories_id}\n                            >\n                                <div className=\"pt-3 category-title\">\n                                    {category.category_name}\n                                </div>\n                                {/* image */}\n                                <div\n                                    className=\"category-image\"\n                                    id={`cat_img_${category.categories_id}`}\n                                >\n                                    <img\n                                        src={`assets/images/categories/${category.category_image}`}\n                                        width=\"60\"\n                                        height=\"60\"\n                                        alt={`${category.category_image}`}\n                                        onClick={() =>\n                                            fetchGoods(category.categories_id)\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        ))}\n                </div>\n            </div>\n            {/* this div will be moved together with the panel,\n              it can contains the cards */}\n        </div>\n    );\n}\nexport default Categories;\n","// get goods per category\n\nexport const createGoodsPerCategory = (goods) => {\n  return {\n    type: 'GOODS_PER_CATEGORY',\n    payload: goods,\n  };\n};\n","//import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport { useHistory } from 'react-router';\nimport team from '../../assets/landingpage/team.png';\n\n// components\nimport Categories from '../categories/categories';\n\nfunction Needer() {\n    // history\n    const history = useHistory();\n    // get the needer first name from state\n    const first_name = useSelector((state) => state.userInfo.first_name);\n    //const email = useSelector((state) => state.categoryGoods[0].giver_id);\n\n    // goodsPerCategory\n    const goodsPerCategory = useSelector((state) => state.categoryGoods);\n    // setGoods(goodsPerCategory);\n    console.log(goodsPerCategory);\n\n    // details handler function\n\n    const detailsHandler = (id) => {\n        history.push(`profileneeder/details/${id}`);\n    };\n\n    return (\n        <div>\n            <div className=\"user-space\">\n                <div className=\"banner\">\n                    <div className=\"avatar\"></div>\n                    <div className=\"welcome\">\n                        <h1> Hello {first_name} !</h1>\n                        <p>Welcome to JUST4GIVING </p>\n                    </div>\n                </div>\n\n                <div id=\"category-box\">\n                    <Categories />\n                </div>\n            </div>\n            <div\n                id=\"main\"\n                style={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                }}\n            >\n                {Object.values(goodsPerCategory).map((good) => (\n                    <Card\n                        className=\"itemCards\"\n                        style={{ flexGrow: 1, width: '18rem' }}\n                        key={good.goods_id}\n                    >\n                        <Card.Img\n                            src={'assets/images/uploads/' + good.image}\n                            // src={team}\n                            alt=\"good\"\n                            className=\"img-center\"\n                            style={{ width: '18rem' }}\n                        />\n                        <Card.Body>\n                            <Card.Text>\n                                {' '}\n                                {moment\n                                    .utc(good.createdAt)\n                                    .local(false)\n                                    .startOf('seconds')\n                                    .fromNow()}{' '}\n                            </Card.Text>\n\n                            <Card.Title>{good.item_name}</Card.Title>\n\n                            <Card.Text>{good.category}</Card.Text>\n                            <div className=\"btn-good-group\"></div>\n\n                            <Button\n                                className=\"btn-good\"\n                                size={'sm'}\n                                onClick={() => detailsHandler(good.goods_id)}\n                                variant=\"info\"\n                            >\n                                Details\n                            </Button>\n                        </Card.Body>\n                    </Card>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Needer;\n","import React, { useState } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n//import Resizer from 'react-image-file-resizer';\n\nfunction NewItem() {\n    const [validated, setValidated] = useState(false);\n    const [item, setItem] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [quality, setQuality] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [image, setImage] = useState('');\n    const [form, setForm] = useState(false);\n\n    // use History\n    const history = useHistory();\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (form.checkValidity() === true) {\n            //upload image\n            const uploadImg = async () => {\n                const formData = new FormData();\n                formData.append('image', image, image.name);\n                const response = await axios.post('/api/upload/', formData);\n            };\n            uploadImg().then(() => {\n                const newGood = {\n                    item: item,\n                    category: category,\n                    description: description,\n                    quality: quality,\n                    quantity: quantity,\n                    image: image,\n                };\n                setForm(true);\n                setValidated(true);\n            });\n        }\n    };\n    if (form) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/itemview',\n                    state: {\n                        item,\n                        description,\n                        category,\n                        quality,\n                        quantity,\n                        image,\n                    },\n                }}\n            />\n        );\n    }\n\n    return (\n        <div className=\"forms\">\n            <h1 className=\"text-center formh1\">What do you want to give?</h1>\n            <div className=\"container formview mt\">\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Row>\n                        <Form.Group>\n                            <Form.File\n                                id=\"img\"\n                                label=\"Image\"\n                                name=\"image\"\n                                onChange={(event) =>\n                                    setImage(event.target.files[0])\n                                }\n                            />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"4\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\" Laptop, Chair, etc...\"\n                                aria-describedby=\"inputGroupPrepend\"\n                                required\n                                onChange={(e) => setItem(e.target.value)}\n                            />\n                            <Form.Control.Feedback></Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\">\n                            <Form.Label\n                                className=\"my-1 mr-2\"\n                                htmlFor=\"inlineFormCustomSelectPref\"\n                            >\n                                Categories\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"my-1 mr-sm-2\"\n                                id=\"category\"\n                                custom\n                                onChange={(e) => setCategory(e.target.value)}\n                            >\n                                <option value=\"0\">Select...</option>\n                                <option value=\"Furnitures\" data-id=\"1\">\n                                    Furnitures\n                                </option>\n                                <option value=\"Food\" data-id=\"2\">\n                                    Food\n                                </option>\n                                <option value=\"Tools\" data-id=\"3\">\n                                    Tools\n                                </option>\n                                <option value=\"Babies\" data-id=\"4\">\n                                    Babies\n                                </option>\n                                <option value=\"Electronics\" data-id=\"5\">\n                                    Electronics\n                                </option>\n                                <option value=\"Sport\" data-id=\"6\">\n                                    Sport\n                                </option>\n                                <option value=\"Books\" data-id=\"7\">\n                                    Books\n                                </option>\n                                <option value=\"Other\" data-id=\"8\">\n                                    Other\n                                </option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"4\">\n                            <Form.Label\n                                className=\"my-1 mr-2\"\n                                htmlFor=\"inlineFormCustomSelectPref\"\n                            >\n                                Quality\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"my-1 mr-sm-2\"\n                                id=\"quality\"\n                                custom\n                                onChange={(e) => setQuality(e.target.value)}\n                            >\n                                <option value=\"0\">Select...</option>\n                                <option value=\"New\">New</option>\n                                <option value=\"Fairly used\">Fairly used</option>\n                                <option value=\"Heavily used\">\n                                    Heavily used\n                                </option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"2\" controlId=\"quantity\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                min={0}\n                                onChange={(e) => setQuantity(e.target.value)}\n                            />{' '}\n                            {/*<Form.Control.Feedback></Form.Control.Feedback>*/}\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                required\n                                as=\"textarea\"\n                                rows={3}\n                                placeholder=\"Please describe the details of the item, e.g. colour, condition, size, etc...\"\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                            <Form.Control.Feedback></Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Button type=\"submit\" className=\"formb\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\nexport default NewItem;\n","function getCategoryId(category) {\n  let category_id = 0;\n  if (category === 'Furnitures') {\n    category_id = 1;\n  }\n  if (category === 'Food') {\n    category_id = 2;\n  }\n  if (category === 'Tools') {\n    category_id = 3;\n  }\n  if (category === 'Babies') {\n    category_id = 4;\n  }\n  if (category === 'Electronics') {\n    category_id = 5;\n  }\n  if (category === 'Sport') {\n    category_id = 6;\n  }\n  if (category === 'Books') {\n    category_id = 7;\n  }\n  if (category === 'Other') {\n    category_id = 8;\n  }\n  return category_id;\n}\n\nexport {\n  getCategoryId\n}","import axios from 'axios';\n//import React, { useState } from 'react';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getCategoryId } from './utils';\n\nconst ItemPreview = (props) => {\n    // use history\n    const history = useHistory();\n\n    // access the state\n    const giver_id = useSelector((state) => state.userInfo.user_id);\n\n    const url = `/api/goods`;\n    // props\n    const item = props.location.state.item;\n    const description = props.location.state.description;\n    const category = props.location.state.category;\n    const quality = props.location.state.quality;\n    const quantity = props.location.state.quantity;\n    const image = props.location.state.image;\n\n    let category_id = getCategoryId(category);\n\n    // good object\n    const newItem = {\n        giver_id: giver_id,\n        item_name: item,\n        description: description,\n        image: image.name,\n        quality: quality,\n        quantity: quantity,\n        category: category,\n        available: 1,\n        taken: 0,\n        owner_id: giver_id,\n        category_id: category_id,\n    };\n\n    const handleNewItem = async () => {\n        try {\n            const response = await axios.post(url, newItem);\n        } catch (err) {\n            console.error(err);\n        }\n        history.push('/profilegiver');\n    };\n\n    return (\n        <div>\n            <h1 className=\"text-center formh1\">Successfully JUST4GIVING it!</h1>\n            <div className=\"container itemview\">\n                {/* preview */}\n                <img\n                    src={`assets/images/uploads/${image.name}`}\n                    id=\"preview\"\n                    width=\"477\"\n                    height=\"477\"\n                    alt=\"good\"\n                />\n                <p>Name :{item}</p>\n                <p>Category :{category}</p>\n                <p>Quantity :{quantity}</p>\n                <p>Quality :{quality}</p>\n                <p>Item Description :{description}</p>\n                <Button onClick={handleNewItem}>Submit</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemPreview;\n","import React, { useState } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\n// import axios from 'axios';\n// import { Redirect } from 'react-router-dom';\nimport pic from '../../assets/login/signin.png';\nimport { useForm, ValidationError } from '@formspree/react';\n\n//Redux\nimport { useDispatch } from 'react-redux';\n//import { userGiver, userNeeder } from '../../redux/actions/userInfoAction.js';\n\nfunction Contactus() {\n    const [first_name, setFirst_name] = useState('');\n    const [last_name, setLast_name] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [state, handleSubmit] = useForm('xleajyly');\n    const dispatch = useDispatch();\n\n    if (state.succeeded) {\n        return <p>Thank you for contacting us!</p>;\n    }\n\n    return (\n        <div className='forms'>\n            <h1 className='text-center formh1'> Contact Us</h1>\n            <div className='container contactuscontainer'>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} md='6' controlId='first_name'>\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control\n                                required\n                                name='first_name'\n                                type='text'\n                                minLength='3'\n                                maxLength='20'\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type='valid'></Form.Control.Feedback>\n                            <Form.Control.Feedback type='invalid'>\n                                At least 3 letters\n                            </Form.Control.Feedback>{' '}\n                        </Form.Group>\n\n                        <Form.Group as={Col} md='6' controlId='last_name'>\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control\n                                required\n                                name='last_name'\n                                type='text'\n                                minLength='3'\n                                maxLength='20'\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type='valid'></Form.Control.Feedback>{' '}\n                            <Form.Control.Feedback type='invalid'>\n                                At least 3 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} md='6' controlId='email'>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type='email'\n                                required\n                                name='email'\n                                onChange={(e) => setEmail(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type='valid'></Form.Control.Feedback>\n                            <Form.Control.Feedback type='invalid'>\n                                Enter email address\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <ValidationError\n                        prefix='Email'\n                        field='email'\n                        errors={state.errors}\n                    />\n\n                    <Form.Row>\n                        <Form.Group as={Col} md='12' controlId='message'>\n                            <Form.Label>Message</Form.Label>\n                            <Form.Control\n                                as='textarea'\n                                required\n                                minLength='30'\n                                rows={5}\n                                name='message'\n                                onChange={(e) => setMessage(e.target.value)}\n                            />{' '}\n                            <Form.Control.Feedback type='valid'></Form.Control.Feedback>\n                            <Form.Control.Feedback type='invalid'>\n                                Enter your message\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <ValidationError\n                        prefix='Message'\n                        field='message'\n                        errors={state.errors}\n                    />\n\n                    <Button\n                        type='submit'\n                        className='btn-submit float-right'\n                        disabled={state.submitting}>\n                        Submit\n                    </Button>\n                </Form>\n\n                <img className='bg5' src={pic} alt='helping hands' />\n            </div>\n        </div>\n    );\n}\n\nexport default Contactus;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport cloneDeep from 'lodash/cloneDeep';\nimport axios from 'axios';\n\n// Redux\nimport { createGoods } from '../../redux/actions/goodsInfoAction';\n\nconst ItemView = () => {\n    // get the item id from the url\n    const itemIndex = useParams().id;\n    console.log(itemIndex);\n    // access goods\n    const goods = useSelector((state) => state.goods);\n    // copy goods state\n    const goods_copy = cloneDeep(goods);\n    const currentGood = goods_copy[itemIndex];\n    const currentGoodId = currentGood.goods_id;\n\n    // dispatch\n    const dispatch = useDispatch();\n\n    //edit Item\n    const editItem = () => {};\n\n    //delete item\n    const deleteItem = async () => {\n        for (const good in goods_copy) {\n            if (good === itemIndex) {\n                delete goods_copy[good];\n            }\n\n            dispatch(createGoods(goods_copy));\n            const response = axios.delete(`/api/goods/${currentGoodId}`);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Successfully Just4Giving </h1>\n            <h4>Item name : {currentGood.item_name}</h4>\n            <h4>Description : {currentGood.description}</h4>\n            <h4>Category : {currentGood.category}</h4>\n            <h4>Quantity : {currentGood.quantity}</h4>\n            <h4>Quality : {currentGood.quality === 1 ? 'New' : 'Used'}</h4>\n            <Button onClick={editItem}>Edit</Button>\n            <Button onClick={deleteItem}>Delete</Button>\n        </div>\n    );\n};\n\nexport default ItemView;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\n//import { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getCategoryId } from './utils';\n\nfunction EditItem() {\n    const [validated, setValidated] = useState(false);\n    const [item, setItem] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [quality, setQuality] = useState('');\n    const [quantity, setQuantity] = useState(0);\n    const [image, setImage] = useState('');\n    // const [form, setForm] = useState(false);\n\n    // use History\n    const history = useHistory();\n\n    // show the previous good properties\n    // get the selected good index\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchGood = async () => {\n            const response = await axios.get(`/api/goods/${id}`);\n            const good = response.data.good;\n            console.log(good);\n            setImage(good.image);\n            setItem(good.item_name);\n            setQuantity(good.quantity);\n            setDescription(good.description);\n            setQuality(good.quality);\n        };\n        fetchGood();\n    }, []);\n\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const updatedGood = {\n                item_name: item,\n                category: category,\n                category_id: getCategoryId(category),\n                description: description,\n                quality: quality,\n                quantity: quantity,\n                image: image,\n            };\n\n            try {\n                const response = await axios.put(\n                    `/api/goods/${id}`,\n                    updatedGood\n                );\n                console.log('response', response);\n            } catch (err) {\n                console.error(err);\n            }\n            // setForm(true);\n        }\n        event.preventDefault();\n        setValidated(true);\n\n        // redirect\n        history.push('/profilegiver');\n    };\n\n    return (\n        <div className=\"forms\">\n            <h1 className=\"text-center formh1\">What do you want to change?</h1>\n            <div className=\"container formview mt\">\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Row>\n                        <Form.Group>\n                            <Form.File id=\"img\" label=\"Image\" />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"4\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                // placeholder=\" Laptop, Chair, etc...\"\n                                aria-describedby=\"inputGroupPrepend\"\n                                required\n                                onChange={(e) => setItem(e.target.value)}\n                                value={item}\n                            />\n                            <Form.Control.Feedback></Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\">\n                            <Form.Label\n                                className=\"my-1 mr-2\"\n                                htmlFor=\"inlineFormCustomSelectPref\"\n                            >\n                                Categories\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"my-1 mr-sm-2\"\n                                id=\"category\"\n                                custom\n                                onChange={(e) => setCategory(e.target.value)}\n                            >\n                                <option value=\"0\">Select...</option>\n                                <option value=\"Furnitures\" data-id=\"1\">\n                                    Furnitures\n                                </option>\n                                <option value=\"Food\" data-id=\"2\">\n                                    Food\n                                </option>\n                                <option value=\"Tools\" data-id=\"3\">\n                                    Tools\n                                </option>\n                                <option value=\"Babies\" data-id=\"4\">\n                                    Babies\n                                </option>\n                                <option value=\"Electronics\" data-id=\"5\">\n                                    Electronics\n                                </option>\n                                <option value=\"Sport\" data-id=\"6\">\n                                    Sport\n                                </option>\n                                <option value=\"Books\" data-id=\"7\">\n                                    Books\n                                </option>\n                                <option value=\"Other\" data-id=\"8\">\n                                    Other\n                                </option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"4\">\n                            <Form.Label\n                                className=\"my-1 mr-2\"\n                                htmlFor=\"inlineFormCustomSelectPref\"\n                            >\n                                Quality\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"my-1 mr-sm-2\"\n                                id=\"quality\"\n                                custom\n                                value={quality}\n                                onChange={(e) => setQuality(e.target.value)}\n                            >\n                                <option value=\"0\">Select...</option>\n                                <option value=\"New\">New</option>\n                                <option value=\"Fairly used\">Fairly used</option>\n                                <option value=\"Heavily used\">\n                                    Heavily used\n                                </option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"2\" controlId=\"quantity\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                min={0}\n                                value={quantity}\n                                onChange={(e) => setQuantity(e.target.value)}\n                            />\n                            {/*<Form.Control.Feedback></Form.Control.Feedback>*/}\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                required\n                                as=\"textarea\"\n                                rows={3}\n                                value={description}\n                                placeholder=\"Please describe the details of the item, e.g. colour, condition, size, etc...\"\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                            <Form.Control.Feedback></Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    {/* <Button type='submit' className='formb'> */}\n                    <Button type=\"submit\" className=\"btn-submit float-right\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\nexport default EditItem;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport moment from 'moment';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nconst DetailsItem = () => {\n    // the good state\n    const [good, SetGood] = useState({});\n\n    // get the id\n    const { id } = useParams();\n    console.log(id);\n\n    // fetch the good and reset the state\n    useEffect(() => {\n        const fetchItem = async () => {\n            const response = await axios.get(`/api/goods/${id}`);\n            console.log(response.data.good);\n            const good = response.data.good;\n            SetGood(good);\n        };\n        fetchItem();\n    }, []);\n    return (\n        <div\n            className=\"detailsItemContainer\"\n            // style={{\n            //   display: 'flex',\n            //   justifyContent: 'center',\n            //   alignItems: 'center',\n            // }}\n        >\n            <div className=\"detailsItem\">\n                <Card>\n                    {/* <Card.Img className= \"detailPict\"\n        variant=\"top\"\n        \n        src= {`../assets/images/uploads/${good.image}`}\n        // width=\"50px\"\n            \n        // src={`assets/images/uploads/${good.image}`}\n        /> */}\n                    <Card.Body>\n                        <img\n                            src={`../assets/images/uploads/${good.image}`}\n                            className=\"detailPict\"\n                            //  id=\"preview\"\n                            //  width=\"477\"\n                            //  height=\"477\"\n                            alt=\"good\"\n                        />\n                        <Card.Title className=\"mt-4\">\n                            Good: {good.item_name}\n                        </Card.Title>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem>\n                            Posted At:\n                            {moment\n                                .utc(good.createdAt)\n                                .local(false)\n                                .startOf('seconds')\n                                .fromNow()}\n                        </ListGroupItem>\n                        <ListGroupItem className=\"detailsrows\">\n                            Category: {good.category}\n                        </ListGroupItem>\n                    </ListGroup>\n                    <Card.Text className=\"detailsrows\">\n                        Description: {good.description}\n                    </Card.Text>\n                </Card>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailsItem;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport moment from 'moment';\nimport { Form, Button, Col } from 'react-bootstrap';\n\n// Redux\nimport { createGoods } from '../../redux/actions/goodsInfoAction';\n\nconst ContactGiver = () => {\n    const [validated, setValidated] = useState(false);\n    const [good, setGood] = useState({});\n    const [giver, setGiver] = useState({});\n    const [subject, setSubject] = useState('');\n    const [message, SetMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const { id } = useParams();\n    const userInfo = useSelector((state) => state.userInfo);\n\n    // dispatch\n    const dispatch = useDispatch();\n\n    // request the good details\n\n    const fetchGood = async () => {\n        const res = await axios.get(`/api/goods/${id}`);\n        const good = res.data.good;\n        const subject = res.data.good.item_name;\n        setSubject(subject);\n        setGood(good);\n        dispatch(createGoods(good));\n    };\n\n    useEffect(() => {\n        fetchGood();\n    }, []);\n\n    const giver_id = useSelector((state) => state.goods.giver_id);\n    const fetchGiver = async () => {\n        const res = await axios.get(`/api/user/${giver_id}`);\n        const giver = res.data.giver.email;\n        console.log(res.data.giver.email);\n\n        setGiver(giver);\n    };\n    useEffect(() => {\n        fetchGiver();\n    }, []);\n    const handleSubmit = async (e) => {\n        const form = e.currentTarget;\n        e.preventDefault();\n        e.stopPropagation();\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            const mailInfo = {\n                to: giver,\n                from: 'just4giving.hyf@gmail.com',\n                subject: subject,\n                content: `\n                <div\n            style=\"\n                max-width: 750px;\n                margin: auto;\n                border: 10px solid #ddd;\n                padding: 100px 20px;\n                font-size: 110%;\n                background: #ffffcc;\n                font-weight: bold;\n            \"\n        >\n            <h2\n                style=\"\n                    max-width: 400px;\n                    text-align: center;\n                    color: #e9d366;\n                    margin: auto;\n                    font-size: 35px;\n                    text-shadow: 2px 2px 4px #000000;\n                    padding-top: 0;\n                    background: #66cbdf;\n                \"\n            >\n                JUST4GIVING\n            </h2>\n            <p style=\"text-align: center\">\n                You have a new needer who is interested in your donated item\n                ${subject}\n            </p>\n            <h3 style=\"text-align: center\">Details of the needer</h3>\n            <div style=\"max-width: 600px; margin: auto\">\n                <table style=\"border-collapse: collapse; width: 100%\">\n                    <tr>\n                        <td>Name</td>\n                        <td>: ${userInfo.first_name}</td>\n                    </tr>\n                    <tr>\n                        <td>Email</td>\n                        <td>: ${userInfo.email}</td>\n                    </tr>\n                    <tr>\n                        <td>About the needer</td>\n                        <td>: ${userInfo.description}</td>\n                    </tr>\n                    <tr>\n                        <td>Message from the needer</td>\n                        <td>: ${message}</td>\n                    </tr>\n                </table>\n            </div>\n            <h2 style=\"text-align: center\">\n                Thank you for donating on JUST4GIVING\n            </h2>\n            <div style=\"background: #66cbdf; padding: 5%\">\n                <h3 style=\"margin: auto\">\n                    \" Globally, helping a stranger is the most popular form of\n                    giving. In a typical month, a massive1.9 billion people will\n                    help a stranger.\"\n                </h3>\n                <h3 style=\"text-align: right; padding-right: 20px\">\n                    Source: CAF – World Giving Index\n                </h3>\n            </div>\n        </div>\n                `,\n            };\n            try {\n                const url = '/api/good/sendEmail';\n                const response = await axios.post(url, mailInfo).then((res) => {\n                    console.log(res.data);\n                    setErrorMessage('Email successfully sent to giver');\n                });\n            } catch (error) {\n                setErrorMessage('Something wrong happened, try again later');\n            }\n        }\n        e.preventDefault();\n        setValidated(true);\n    };\n\n    return (\n        <div className=\"formviewG\">\n            <h2 className=\"formh1\"> Item Details</h2>\n            <div className=\"container\">\n                <div className=\"flex-container\">\n                    <div className=\"flex-child\">\n                        <img\n                            src={`/assets/images/uploads/${good.image}`}\n                            id=\"preview\"\n                            width=\"477\"\n                            height=\"477\"\n                            alt=\"good\"\n                        />\n                    </div>\n                    <div className=\"flex-child\">\n                        <h4 className=\"itemh\">{good.item_name}</h4>\n                        <p>\n                            {moment\n                                .utc(good.createdAt)\n                                .local(false)\n                                .startOf('seconds')\n                                .fromNow()}\n                        </p>\n                        <p>{good.category}</p>\n                        <p>{good.description}</p>\n                        <p>Quantity: {good.quantity}</p>\n                        <p>Quality: {good.quality}</p>\n                    </div>\n                </div>\n\n                <div className=\"giverform\">\n                    <Form\n                        noValidate\n                        validated={validated}\n                        onSubmit={handleSubmit}\n                    >\n                        <Form.Row>\n                            <Form.Group\n                                as={Col}\n                                md=\"12\"\n                                controlId=\"description\"\n                            >\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    required\n                                    placeholder=\"Example:Hi, I’m Sander I live in Brussel. I’m interested in the baby crib.\"\n                                    minLength=\"5\"\n                                    maxLength=\"500\"\n                                    rows={3}\n                                    onChange={(e) => SetMessage(e.target.value)}\n                                />{' '}\n                                <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Write your message in at least 5 letters\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                        </Form.Row>\n                        <Button type=\"submit\" className=\"formb\">\n                            Submit\n                        </Button>\n                        {errorMessage && (\n                            <div className=\"error\"> {errorMessage} </div>\n                        )}\n                    </Form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ContactGiver;\n","import { signedUserInfo } from './redux/actions/userInfoAction';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nfunction Authenticate() {\n    const dispatch = useDispatch();\n    const userInfo = useSelector((state) => state.userInfo);\n\n    useEffect(() => {\n        if (userInfo && userInfo.signedIn === true) {\n            return;\n        }\n\n        axios\n            .get('/api/checkToken', {\n                withCredentials: true,\n            })\n            .then((response) => {\n                dispatch(signedUserInfo(response.data.user));\n            });\n    }, []);\n\n    return null;\n}\n\nexport default Authenticate;\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// components\nimport Navigation from './components/landingpage/Navigation';\nimport Demo from './components/landingpage/Demo';\nimport Footer from './components/landingpage/Footer';\nimport SignUpNeeder from './components/register/SignUpNeeder';\nimport SignUpGiver from './components/register/signUpGiver';\nimport Login from './components/login/Login';\nimport LogoutPage from './components/login/LogoutPage';\nimport Giver from './components/giver/Giverprofile';\nimport Needer from './components/needer/NeederProfile';\nimport NewItem from './components/giver/NewItem';\nimport ItemPreview from './components/giver/ItemPreview';\nimport Contactus from './components/contactus/contactus';\nimport ItemView from './components/giver/ItemView';\nimport EditItem from './components/giver/EditItem';\nimport DetailsItem from './components/giver/DetailsItem';\nimport ContactGiver from './components/needer/ContactGiver';\nimport Authenticate from \"./Authenticate\";\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Authenticate />\n            <Router>\n                <Navigation />\n                <Switch>\n                    <Route path='/' exact component={Demo} />\n                    <Route\n                        path='/signupneeder'\n                        exact\n                        component={SignUpNeeder}\n                    />\n                    <Route path='/signupgiver' exact component={SignUpGiver} />\n                    <Route path='/profilegiver' exact component={Giver} />\n                    <Route path='/profileneeder' exact component={Needer} />\n                    <Route path='/newgoods' exact component={NewItem} />\n                    <Route path='/itemview' component={ItemPreview} />\n                    <Route path='/login' exact component={Login}></Route>\n                    <Route path='/logout' exact component={LogoutPage}></Route>\n                    <Route path='/contactus' component={Contactus} />\n                    <Route\n                        path='/profilegiver/item/:id'\n                        exact\n                        component={ItemView}></Route>\n                    <Route\n                        path='/edititem/:id'\n                        exact\n                        component={EditItem}></Route>\n                    <Route\n                        path='/detailsitem/:id'\n                        exact\n                        component={DetailsItem}></Route>\n                    <Route\n                        path='/profileneeder/details/:id'\n                        exact\n                        component={ContactGiver}></Route>\n                    {/* for testing purpose */}\n                    {/* <Route path=\"/categories\" exact component ={Categories}></Route> */}\n                </Switch>\n                <Footer />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * User reducer :\n * -----------\n*/\n\nconst initialState = {\n    first_name:'',\n    last_name:'',\n    age:0,\n    email:'',\n    street:'',\n    phone:'',\n    password:'',\n    is_giver:0,\n    is_needer:0,\n    description:'',\n    agreement:0,\n    signedIn: false,\n    signedOut:true ,\n    signedInError:false ,\n};\n\n\nexport const userInfoReducer = (state = initialState , action) => {\n    switch (action.type){\n        case 'IS_GIVER':\n            return{...state , ...action.payload ,signedIn: true, signedOut: false, signedInError: false};\n        case 'IS_NEEDER':\n            return {...state , ...action.payload ,signedIn: true, signedOut: false, signedInError: false};\n        case 'SIGNED_USER_INFO':\n            return {...state , ...action.payload ,signedIn: true, signedOut: false, signedInError: false};\n        case 'SIGNED_IN_ERROR':\n            return {signedIn: false, signedOut: true, signedInError: true} ;\n        case 'SIGNED_OUT':\n            return {signedIn: false, signedOut: true} ;\n        default:\n            return state ;\n\n    }\n\n}"," const initialState = { } ;\n\n\n export const goodsInfoReducer = (state = initialState , action) => {\n    switch (action.type){\n        case 'CREATE_GOODS':\n            return {...state , ...action.payload} ;\n\n        case 'UPDATE_GOODS':\n            return {...state , ...action.payload} ;\n\n        case 'DELETE_GOODS':\n            return {...state , ...action.payload} ;\n        default:\n            return  state ;\n    }\n\n }\n\n","const initialState = {};\n\nexport const goodsPerCategoryReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'GOODS_PER_CATEGORY':\n            return { ...action.payload };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\n\n// import all reducers\nimport { userInfoReducer } from './userInfoReducer';\nimport { goodsInfoReducer } from './goodsInfoReducer';\nimport { goodsPerCategoryReducer } from './goodsPerCategoryReducer';\n\n// all reducers takes an object with each properties express one reducers\nconst allReducers = combineReducers({\n  userInfo: userInfoReducer,\n  goods: goodsInfoReducer,\n  categoryGoods: goodsPerCategoryReducer,\n});\n\nexport default allReducers;\n","// store takes two parameters combined reducer and middlewares .....\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport allReducers from './reducers/index';\n\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk));\n\nconst store = createStore(allReducers, composedEnhancer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Redux\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}